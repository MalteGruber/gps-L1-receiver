

class NavigationMessageHandler:
    
    
    def __init__(self):
        pass
        self.bitstream=""
        self.rp=0
        self.preamble="10001011"
        
        print(self.invert(self.preamble)+"<")
        print((self.preamble)+"<")
        self.data_bits="0"*30
        self.D29prev="0"
        self.D30prev="0"

    def invert(self,bitstring):
        
        tmp=""
        for s in bitstring:
            if(s=="0"):
                tmp+="1"
            else:
                tmp+="0"
        return tmp
    
    """
    Scanns for preamble and puts rp at end of preamble
    """
    def scan_for_preamble(self):
        possible="00000000"
        
        self.preamble_inv=self.invert(self.preamble)
        
        for i in range(len(self.bitstream)-self.rp):
            
            possible=possible[1:]+self.bitstream[self.rp]
            #print(possible)
            if possible == self.preamble_inv:
                self.bitstream=self.invert(self.bitstream)
                print("Found inverted preamble @",self.rp)
                return True
            if possible == self.preamble:
                print("Found good preamble @",self.rp)
                return True
            self.rp+=1
            
        return False
            
    """
    Assumes that we are at the begining of a word
    """
    def calc_xor(self,a,b):
        a=a=="1"
        b=b=="1"
        xor=a!=b
        if(xor):
            return "1"
        else:
            return "0"
        
    def calc_xor_sum(self,d0,offsets):     
        count=0
        for o in offsets:  
            if(self.bits(o-1, 1))=="1":
                count+=1
        if(d0=="1"):
            count+=1
        if(count%2>0):
            return "1"
        return "0"
    
    
    """
    rp must be at start of word
    """
    def calculate_parity_bits(self):
        
        D29p=self.D29prev
        D30p=self.D30prev
        received_parity=self.bits(24,6)       
        data_bits=self.bits(0,23)
         
        D25=self.calc_xor_sum(D29p, [1,2,3,5, 6,10,11,12 ,13,14,17, 18,20,23])
        D26=self.calc_xor_sum(D30p, [2,3,4,6, 7,11,12,13, 14,15,18, 19,21,24])
        D27=self.calc_xor_sum(D29p, [1,3,4,5, 7,8,12,13,  14,15,16, 19,20,22])
        D28=self.calc_xor_sum(D30p, [2,4,5,6, 8,9,13,14,  15,16,17, 20,21,23])
        D29=self.calc_xor_sum(D30p, [1,3,5,6, 7,9,10,14,  15,16,17, 18,21,22,24])
        D30=self.calc_xor_sum(D29p, [3,5,6,8, 9,10,11,13, 15,19,22, 23,24])
 
        
        if(D30p=="1"):
            data_bits=self.invert(self.data_bits) 
            
            
        calculated_parity=D25+D26+D27+D28+D29+D30
        
     #   
       # 
        #print("Parity  bits\t",calculated_parity,"D29,D30",D29p,D30p)
        #print("received_parity\t",received_parity)
      #  print("--")
        

        #print("Now: ",D29p,D30p,"from ",self.D29prev,self.D30prev)
        self.D29prev=received_parity[4]
        self.D30prev=received_parity[5]
        #print("Nxt: ",self.D29prev,self.D30prev,"from ",self.bitstream[self.rp+28:self.rp+30])
        
        if calculated_parity==received_parity:
            return True,data_bits
        else:
            return False,data_bits
        
            
    def bits(self,start,count):
        v=""
        try:
            v=self.bitstream[self.rp+start:self.rp+start+count]
        except:
            print("FAUIL:",start,self.rp)
        
        return v
    
    
    def parse_message_001(self,words):
        pass
    
    def parse_message(self,words):
        how=words[1]
        subframe=how[20:23]
        print("Subframe ",subframe)
        
        if(subframe=="001"):
            self.parse_message_001(words)
            
    def parse_frame(self):
        
        
        
        pushed_rp=self.rp
        self.rp-=7
        
        self.D29prev="0"
        self.D30prev="0"
        
        words=[]
        pok=True
        for i in range(10):    
            ok,data=self.calculate_parity_bits()
            if(i<1):
                pok=pok and ok
            words.append(data)
            self.rp+=30
        
        if(pok):
            print("PARITY OK! :D\tPARITY OK! :D\tPARITY OK! :D"*3)
            self.parse_message(words)
           # print("sub_frame_id",sub_frame_id)
        else:
            #Revert and continue scanning..
            self.rp=pushed_rp-9
            
        week=self.bits(start=0, count=10)
 #       print("sub_frame_id",sub_frame_id)
#        print("week",week)
    
        
    def parse_bits(self):
        
        while(self.scan_for_preamble()):
            try:
                self.parse_frame()
            except:
            
                print("FAUIL:",self.rp)
        
            
            self.rp+=10
            pass
        
        
            
        
        
        
    def push_bits(self,bits):
        
        self.bitstream+=bits
        print(len(bits),"bits",0.05*len(bits),"seconds")
        self.parse_bits()



n=NavigationMessageHandler()

#11
#n.push_bits("01000001100110000111100100001110101101110100111101001110011111101110001001111111011011010101100001000011110110110110111000010101101111111001010010100110110000000010101100101111111111110101011110111100111010001001100101100111000100000110100011")

#1
#n.push_bits("00100001011001011100110011000011110010000111010110111010011101111010010110011011000100000000010010010001010111011001111011011011011100001010110111111100101001010011011001111110101001101000000000000101010000100001100010111011001")
#n.push_bits("110110110011000011110010000111010110111010011101111010010110011011000100000000010010010001010111011001111011011011011100001010110111111100101001010011011001111110101001101000000000000101010000100001100010111011001101001100011101111100101110000000000100000011100111100110000111010110010101010100001101010011110111111111111110010101001110111010011101111010010110011011000100000000000001")

#1 but with     b=read_data_spain_complex(2000+1000*4000,N)
#n.push_bits("1001010100110010011101111111110110110111010100010011000010010010010001111010100100000001101011010110010011000000101011001011111111111101010111101111001110100010011001011001110001000001101000111111111101111110001100001100111100010100110101010101111001010110000100000000000000110101")

#20
#n.push_bits("1100100111111011100011111111101001001010100111101111000010010010010001100101011011111111101011001001101100110000101011001000001111111101")

#32 a bit noisy at start:
#n.push_bits


#sat 1 looong frun
#n.push_bits
#11
#n.push_bits("1001111110001011100010000000110110110101011000010011000010010010010001111010100100000001101011010110010011000000101011001011111111111101010111101111001110100010011001011001110001000001101000111111111101111110001100001100111100010100110101010101111001010110000100000000000000110111011000100010110000100011100111111011100010000000000111100100010000100011100110111111111111000000001001110001000101111100001100111000100100101010111111100010001000000")


#sat 32, 15900
#n.push_bits

# sat 1
#3000 sv 27:
#n.push_bits
#3000 sv 20:

#6000!! sv 20 :D
n.push_bits


if False:
    #Reference
    #                                       |----|
    n.push_bits("00"+"100010110000000000000011"+"100100"+
                "101001101110100000000101"+"001100"+
                "010111001101000100000000"+"100010")

